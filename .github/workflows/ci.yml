name: Run Unit Test via Pytest

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install Chrome and ChromeDriver
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip
          curl -sSL https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -o google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f  # Fix dependencies if needed

      - name: Install ChromeDriver
        run: |
          LATEST=$(curl -sSL https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/${LATEST}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/

      # Recreate virtual environment and install dependencies
      - name: Recreate virtual environment and install dependencies
        run: |
          rm -rf venv  # Clean up any existing virtual environment
          python3 -m venv venv  # Create virtual environment
          source venv/bin/activate  # Activate virtual environment
          pip install --upgrade pip  # Upgrade pip
          pip install numpy  # Install numpy
          pip install -r requirements.txt  # Install other dependencies from requirements.txt

      # Run the tests
      - name: Run Unit Tests via Pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q

      # Lint with Ruff
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py310 .
        continue-on-error: true

      # Test with pytest
      - name: Test with pytest
        run: |
          coverage run -m pytest -v -s

      # Generate Coverage Report
      - name: Generate Coverage Report
        run: |
          coverage report -m
